# Resources for IngressGateways component

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    app: ingressgateway
    istio: ingressgateway
    release: istio
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingressgateway
subjects:
- kind: ServiceAccount
  name: ingressgateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ingressgateway
    istio: ingressgateway
    release: istio
  name: ingressgateway
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/stats/prometheus"
        inject.istio.io/templates: "gateway"
      labels:
        app: ingressgateway
        istio: ingressgateway
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - image: auto
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          env:
            - name: JWT_POLICY
              value: first-party-jwt
          ports:
          - containerPort: 15021
          - containerPort: 80
          - containerPort: 443
          - containerPort: 15029
          - containerPort: 15030
          - containerPort: 15031
          - containerPort: 15032
          - containerPort: 15443
          - containerPort: 31400
          - containerPort: 15011
          - containerPort: 15012
          - containerPort: 8060
          - containerPort: 853
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 15000
            name: proxy-admin
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 1337
            runAsGroup: 1337
            runAsNonRoot: true
      securityContext:
        sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: '0'
      serviceAccountName: ingressgateway
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: ingressgateway
    istio: ingressgateway
    release: istio
  name: ingressgateway
  namespace: istio-system
spec:
  ports:
  - name: status-port
    port: 15021
    targetPort: 15021
  - name: tls-istiod
    port: 15443
    targetPort: 15443
  - name: tls-webhook
    port: 15017
    targetPort: 15017
  - name: http2
    port: 80
    targetPort: 80
  - name: https
    port: 443
  - name: kiali
    port: 15029
    targetPort: 15029
  - name: prometheus
    port: 15030
    targetPort: 15030
  - name: grafana
    port: 15031
    targetPort: 15031
  - name: tracing
    port: 15032
    targetPort: 15032
  - name: tcp
    port: 31400
  - name: proxy-admin
    port: 15000
    targetPort: 15000
  selector:
    app: ingressgateway
    istio: ingressgateway
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: ingressgateway
    istio: ingressgateway
    release: istio
  name: ingressgateway
  namespace: istio-system
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ingressgateway
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - "*"
    # Additional ports in gateaway for the ingressPorts - apps using dedicated port instead of hostname
